openapi: '3.0.0'
info:
    version: 1.0.0
    title: todo-api
    description: Sample API for testing quick start guides of various OpenAPI 3.1 documentation generators.
    contact:
        name: Minae Lee
        url: https://github.com/minaelee
    license:
        name: MIT License
        url: https://opensource.org/license/mit/
paths:
    /tasks:
        get:
            description: |
                Returns all tasks.
            operationId: getTasks
            parameters:
                - name: limit
                  in: query
                  description: Set maximum number of results
                  required: false
                  schema:
                      type: integer
                      format: int32
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Task'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            description: Creates a new task.
            operationId: addTask
            requestBody:
                description: Task to add to the list.
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NewTask'
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Task'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /tasks/{id}:
        get:
            description: Returns a task based on its ID
            operationId: getTaskById
            parameters:
                - name: id
                  in: path
                  description: ID of task to get
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Task'
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            description: Deletes a single task based on the ID supplied in the path
            operationId: deleteTask
            parameters:
                - name: id
                  in: path
                  description: ID of task to delete
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '204':
                    description: Task deleted
                default:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    schemas:
        Task:
            allOf:
                - $ref: '#/components/schemas/NewTask'
                - type: object
                  required:
                      - id
                  properties:
                      id:
                          type: integer
                          format: int64

        NewTask:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                tag:
                    type: string

        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
